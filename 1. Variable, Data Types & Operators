Variable, Data Types & Operators
---------------------------------
Introduction
------------

Output in c++
-------------

How does code run?
------------------


#include <iostream>
using namespace std;

int main(){
    cout << "Hello World!!";
    return 0;
}

output:
Hello World!!


#include <iostream>

int main(){
    std::cout << "Hello World!!";
    return 0;
}

output:
Hello World!!


#include <iostream>
using namespace std;

int main(){
    cout << "Hello World!!" << endl;
    return 0;
}

output:
Hello World!!


#include <iostream>
using namespace std;

int main(){
    cout << "Hello World!!" << "\n" ;
    return 0;
}

output:
Hello World!!

#include <iostream>
using namespace std;

int main(){
    cout << "Hello World!!\nRanjith Krishna" << endl;
    return 0;
}

output:
Hello World!!
Ranjith Krishna


#include <iostream>
using namespace std;

int main(){
    cout << "Ranjith " << "Krishna" << endl;
    return 0;
}


output:
Ranjith Krishna


#include <iostream>
using namespace std;

int main(){
    cout << "Ranjith\n" << "Krishna" << endl;
    return 0;
}

output:
Ranjith
Krishna


Boilerplate Code and Comments
-----------------------------

#include <iostream>
using namespace std;

// This is the starting point of execution
int main(){
    
    return 0;
}

// Boiler plate code - comment


output:



Variables and Data Types
------------------------

#include <iostream>
using namespace std;

int main(){
    int age = 23;
    cout << age << endl;
    return 0;
}


output:
23



#include <iostream>
using namespace std;

int main(){
    int age = 23;
    cout << sizeof(age) << endl;
    return 0;
}

output:
4



#include <iostream>
using namespace std;

int main(){
    int age = 23;
    char grade = 'A';
    cout << grade << endl;
    return 0;
}


output:
A


#include <iostream>
using namespace std;

int main(){
    int age = 23;
    char grade = 'A';
    float PI = 3.14f;
    
    cout << PI << endl;
    return 0;
}

output:
3.14



#include <iostream>
using namespace std;

int main(){
    int age = 23;
    char grade = 'A';
    float PI = 3.14f;
    bool isSafe = false;
    
    cout << isSafe << endl;
    return 0;
}


output:
0


#include <iostream>
using namespace std;

int main(){
    int age = 23;
    char grade = 'A';
    float PI = 3.14f;
    bool isSafe = false;
    double price = 100.99;
    
    cout << price << endl;
    return 0;
}


output:
100.99


Type Conversion & Type Casting
------------------------------


#include <iostream>
using namespace std;

int main(){

    char grade = 'A';
    int value = grade;
    
    cout << value << endl;
    return 0;
}


output:
65


#include <iostream>
using namespace std;

int main(){

    double price = 100.99;
    int newPrice = (int)price;
    
    cout << newPrice << endl;
    return 0;
}


output:
100


Input in C++
------------


#include <iostream>
using namespace std;

int main(){

    int age;
    
    cout << age << endl;
    return 0;
}


output:
0


#include<bits/stdc++.h>
using namespace std;

int main(){
    int age;
    cout << "Enter the age: ";
    cin >> age;
    cout<<"your age is: "<<age<<endl;
    return 0;
}

input 

23

output:
your age is: 23


#include<bits/stdc++.h>
using namespace std;

int main(){
    double price;
    cout << "Enter the price: ";
    cin >> price;
    cout<<"you entered price: "<<price<<endl;
    return 0;
}

input
99.99


output
you entered price: 99.99


Operators
----------

Arithmetic Operators(+, -, *, /, %)
--------------------

#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=5, b=10;
    int sum = a + b;
    cout << sum << endl;

    return 0;
}

output
15


#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=5, b=10;
    cout << "sum = "<< (a+b) << endl;

    return 0;
}

output
sum = 15



#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=10, b=5;
    cout << "difference = "<< (a-b) << endl;

    return 0;
}

output
difference = 5


#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=10, b=5;
    cout << "multiply = "<< (a*b) << endl;

    return 0;
}


output
multiply = 50


#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=10, b=5;
    cout << "division = "<< (a/b) << endl;

    return 0;
}

output
division = 2



#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=10, b=5;
    cout << "modulo = "<< (a%b) << endl;

    return 0;
}


output
modulo = 0


#include<bits/stdc++.h>
using namespace std;

int main(){
    int a=10, b=5;
    cout << "sum = "<< (a+b) << endl;
    cout << "difference = "<< (a-b) << endl;
    cout << "multiply = "<< (a*b) << endl;
    cout << "division = "<< (a/b) << endl;
    cout << "modulo = "<< (a%b) << endl;

    return 0;
}


output
sum = 15
difference = 5
multiply = 50
division = 2
modulo = 0


#include<bits/stdc++.h>
using namespace std;

int main(){

    cout << (5 / 2) << endl;
    return 0;
}

output
2


#include<bits/stdc++.h>
using namespace std;

int main(){

    int a = 5;
    double b = 2;
    cout << (a / b) << endl;
    return 0;
}

output
2.5


#include<bits/stdc++.h>
using namespace std;

int main(){

    cout << (5 / (double)2) << endl;
    return 0;
}

output
2.5



#include<bits/stdc++.h>
using namespace std;

int main(){

    int ans = (5 / (double)2);
    cout << ans << endl;
    return 0;
}

output
2


Relational Operators (<, <=, >, >=, ==, !=)
--------------------


#include<bits/stdc++.h>
using namespace std;

int main(){

    cout << (3 < 5) << endl; // true -> 1
    cout << (3 > 5) << endl; // false -> 0
    cout << (3 <= 3) << endl; // true -> 1
    cout << (3 == 3) << endl; // true -> 1
    cout << (3 == 5) << endl; // false -> 0
    cout << (3 != 5) << endl; // true -> 1
    cout << (3 != 3) << endl; // false -> 0
    return 0;
}


output
1
0
1
1
0
1
0


Logical Operators (OR - ||, AND - &&, NOT - !)
------------------

#include<bits/stdc++.h>
using namespace std;

int main(){

    cout << !(3 > 1) << endl; // false -> 0
    cout << !(3 < 1) << endl; // true -> 1
    cout << ((3 < 1) || (3 < 5))<< endl; // true -> 1
    cout << ((3 < 1) || (3 < 1))<< endl; // false -> 0
    cout << ((3 > 1) && (3 > 2))<< endl; // true -> 1
    cout << ((3 > 1) && (3 > 4))<< endl; // false -> 0
    return 0;
}

output
0
1
1
0
1
0


Sum of 2 Numbers
----------------


#include<bits/stdc++.h>
using namespace std;

int main(){

    int a,b;
    cout<<"Enter a: ";
    cin >> a;
    cout<<"Enter b: ";
    cin >> b;
    int sum = a+b;
    cout<<"sum = "<<sum<<endl;
    return 0;
}

input
4
5

output
sum = 9


Unary Operators(++, --)
---------------

Increment(++)

Post Increment

#include<bits/stdc++.h>
using namespace std;

int main(){

    int a = 10;
    int b = a++;
    cout <<"b = "<< b << endl;//b = 10
    cout <<"a = "<< a << endl;//a = 11
    return 0;
}

output
b = 10
a = 11

Pre Increment

#include<bits/stdc++.h>
using namespace std;

int main(){

    int a = 10;
    int b = ++a;
    cout <<"b = "<< b << endl;//b = 11
    cout <<"a = "<< a << endl;//a = 11
    return 0;
}

output
b = 11
a = 11




Decrement(--)

Post Decrement


#include<bits/stdc++.h>
using namespace std;

int main(){

    int a = 10;
    int b = a--;
    cout <<"b = "<< b << endl;//b = 10
    cout <<"a = "<< a << endl;//a = 9
    return 0;
}

output
b = 10
a = 9




Pre Decrement


#include<bits/stdc++.h>
using namespace std;

int main(){

    int a = 10;
    int b = --a;
    cout <<"b = "<< b << endl;//b = 9
    cout <<"a = "<< a << endl;//a = 9
    return 0;
}

output
b = 9
a = 9


Task
----

Build Calculator cover all arthimatic operators

#include<bits/stdc++.h>
using namespace std;

int main(){

    int a,b;
    cout<<"Enter a: ";
    cin >> a;
    cout<<"Enter b: ";
    cin >> b;
    int sum = a+b;
    cout<<"sum = "<<sum<<endl; 
    int difference = a-b;
    cout<<"difference = "<<difference<<endl;
    int multiply = a*b;
    cout<<"multiply = "<<multiply<<endl;
    int division = a/b;
    cout<<"division = "<<division<<endl;
    int modulo = a%b;
    cout<<"modulo = "<<modulo<<endl;
    return 0;
}


output
sum = 15
difference = 5
multiply = 50
division = 2
modulo = 0



---------------------------------------------------------------------------------------------------------------------